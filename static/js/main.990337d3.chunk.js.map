{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PhonebookForm","styled","form","FormLabel","label","FormButton","button","Form","onSubmit","this","props","className","css","inputNumber","type","name","pattern","placeholder","maxLength","title","required","mask","Component","TextH2","h2","Notification","message","ContactsList","ul","SearchInput","input","ContactsItem","li","NumberSpan","span","DeleteButton","Contacts","contacts","searchFunc","deleteFunc","onInput","map","id","number","onClick","length","SectionStyle","section","TitleH1","h1","Notify","init","position","Section","e","preventDefault","nameRef","target","children","numberRef","inputName","value","trim","checkNumber","checkName","doAddContact","warning","doClearNumber","split","join","getContacts","data","filter","parseSearchQuery","toString","searchQueryText","searchQueryNumber","filtredArray","includes","namesArray","toLowerCase","concat","render","component","checkForDoubleID","clearNumber","result","forEach","clearName","doClearName","ids","checked","contact","indexOf","push","searchQuery","match","queries","query","App","state","success","setState","uuidv4","makeSearch","toLocaleLowerCase","doDeleteContact","reportName","newArr","info","failure","storage","JSON","parse","localStorage","getItem","contscts","prevProps","prevState","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.990337d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNumber\":\"Form_inputNumber__3H5BY\"};","import styled from '@emotion/styled';\r\n\r\nexport const PhonebookForm = styled.form`\r\n  display: block;\r\n  border: solid 1px black;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  display: block;\r\n  font-size: 26px;\r\n  margin-bottom: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  display: block;\r\n  font-size: 22px;\r\n`;\r\n","import React, { Component } from \"react\";\nimport { FormButton, FormLabel, PhonebookForm } from \"./Form.styled\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\nimport css from \"./Form.module.css\";\n\nclass Form extends Component {\n  render() {\n    const { onSubmit } = this.props;\n    return (\n      <PhonebookForm onSubmit={onSubmit}>\n        <FormLabel>\n          <span>Name</span>\n          <InputMask\n            key=\"nameKey\"\n            className={css.inputNumber}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Arnold Schwarzenegger\"\n            maxLength=\"25\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          <span>Number</span>\n          <InputMask\n            key=\"numberKey\"\n            className={css.inputNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"+38 (099) 999-99-99\"\n            mask=\"+38 (099) 999-99-99\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </FormLabel>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </PhonebookForm>\n    );\n  }\n}\n\nexport default Form;\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const TextH2 = styled.h2`\r\n  font-weight: 400;\r\n  color: teal;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { TextH2 } from './Notification.styled';\r\n\r\nconst Notification = props => {\r\n  const { message } = props;\r\n  return (\r\n    <div>\r\n      <TextH2>{message}</TextH2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactsList = styled.ul`\r\n  display: block;\r\n  padding-left: 10px;\r\n`;\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  margin-bottom: 20px;\r\n  font-size: 22px;\r\n  outline: unset;\r\n  &:focus,\r\n  &:hover {\r\n    filter: drop-shadow(0px 0px 5px lightblue);\r\n    border: 1px solid lightblue;\r\n  }\r\n`;\r\n\r\nexport const ContactsItem = styled.li`\r\n  display: block;\r\n  font-family: monospace;\r\n  list-style-type: disc;\r\n  font-size: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nexport const NumberSpan = styled.span`\r\n  position: fixed;\r\n  right: 45px;\r\n  display: inline-flex;\r\n`;\r\nexport const DeleteButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 2px;\r\n  font-size: 10px;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import { Fragment } from 'react';\r\nimport Notification from '../Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ContactsItem,\r\n  ContactsList,\r\n  DeleteButton,\r\n  NumberSpan,\r\n  SearchInput,\r\n} from './Contacts.styled';\r\n\r\nconst Contacts = ({ contacts, searchFunc, deleteFunc, message }) => {\r\n  return (\r\n    <Fragment>\r\n      <ContactsList>\r\n        <SearchInput\r\n          type='text'\r\n          name='search'\r\n          title='Введите имя или телефон'\r\n          placeholder='Search contact'\r\n          onInput={searchFunc}\r\n        />\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactsItem key={id}>\r\n            {'• ' + name + ': '}\r\n            <NumberSpan>\r\n              {number}\r\n              <DeleteButton id={id} onClick={() => deleteFunc(id)}>\r\n                X\r\n              </DeleteButton>\r\n            </NumberSpan>\r\n          </ContactsItem>\r\n        ))}\r\n      </ContactsList>\r\n      {!contacts.length && <Notification message={message}></Notification>}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  searchFunc: PropTypes.func.isRequired,\r\n  deleteFunc: PropTypes.func.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\n\nexport const SectionStyle = styled.section`\n  text-align: left;\n  max-width: 500px;\n  width: 100%;\n  margin: auto;\n  border: solid 1px black;\n  background-color: white;\n  filter: drop-shadow(2px 4px 6px black);\n  padding: 25px;\n  border-radius: 10px;\n  margin: 50px auto;\n`;\n\nexport const TitleH1 = styled.h1`\n  font-size: 28px;\n  margin: 0 0 20px;\n  font-weight: 700;\n`;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"../Form/Form\";\nimport Contacts from \"../Contacts/Contacts\";\nimport { TitleH1, SectionStyle } from \"./Section.styled\";\nimport { Notify } from \"notiflix\";\nNotify.init({ position: \"center-top\" });\n\nexport class Section extends Component {\n  onSubmit = (e) => {\n    e.preventDefault();\n    const nameRef = e.target.children[0].children[1];\n    const numberRef = e.target.children[1].children[1];\n    const inputName = nameRef.value.trim();\n    const inputNumber = numberRef.value;\n\n    if (!this.checkNumber(inputNumber)) {\n      if (inputNumber) Notify.warning(\"Sorry. This NUMBER already exists.\");\n      return;\n    }\n    if (!this.checkName(inputName)) {\n      // if (inputName) Notify.warning('Sorry. This NAME already exists.');\n      Notify.warning(\"Sorry. This NAME already exists.\");\n      return;\n    }\n\n    nameRef.value = \"\";\n    numberRef.value = \"\";\n    this.props.doAddContact(inputName, inputNumber);\n  };\n\n  doClearNumber = (number) => {\n    const noSpace = number.split(\" \").join(\"\");\n    const noBracket = noSpace.split(\"(\").join(\"\").split(\")\").join(\"\");\n    const noSign = noBracket.split(\"-\").join(\"\").split(\"+\").join(\"\");\n    return noSign;\n  };\n\n  checkNumber(inputNumber) {\n    const clearNumber = this.doClearNumber(inputNumber);\n    let result = true;\n    if (inputNumber === \"\") result = false;\n    this.props.data.contacts.forEach(({ number }) => {\n      if (clearNumber === this.doClearNumber(number)) result = false;\n    });\n\n    return result;\n  }\n\n  checkName(inputName) {\n    let result = true;\n    const clearName = this.doClearName(inputName);\n    if (clearName === \"\") result = false;\n    this.props.data.contacts.forEach(({ name }) => {\n      if (clearName === this.doClearName(name)) result = false;\n    });\n    return result;\n  }\n\n  doClearName(name) {\n    return name.split(\" \").join(\"\").toLowerCase().trim();\n  }\n\n  checkForDoubleID(contacts) {\n    const ids = [];\n    const checked = [];\n    contacts.forEach((contact) => {\n      if (ids.indexOf(contact.id) < 0) {\n        ids.push(contact.id);\n        checked.push(contact);\n      }\n    });\n    return checked;\n  }\n  getContacts = () => {\n    const { filter, contacts } = this.props.data;\n    const { searchQueryText, searchQueryNumber } = this.parseSearchQuery(\n      filter.toString()\n    );\n    if (searchQueryText.length > 0 || searchQueryNumber.length > 0) {\n      let filtredArray = [];\n      //поиск по номеру\n      if (searchQueryNumber.length > 0) {\n        filtredArray = contacts.filter(({ number }) => {\n          const clearNumberText = this.doClearNumber(number);\n          return clearNumberText.includes(searchQueryNumber);\n        });\n        //комбинированый поиск\n        if (searchQueryText.length > 0) {\n          const namesArray = contacts.filter(({ name }) =>\n            name.toLowerCase().includes(searchQueryText)\n          );\n          return filtredArray.length > 0\n            ? filtredArray.concat(namesArray)\n            : namesArray;\n        }\n        return filtredArray;\n      } else {\n        //Поиск по имени\n        filtredArray = contacts.filter(({ name }) =>\n          name.toLowerCase().includes(searchQueryText)\n        );\n        return filtredArray;\n      }\n    }\n    return contacts;\n  };\n\n  parseSearchQuery(searchQuery) {\n    let searchQueryText = \"\";\n    let searchQueryNumber = \"\";\n    if (searchQuery) {\n      if (searchQuery.match(/\\d+/)) {\n        searchQueryNumber = searchQuery.match(/\\d+/).toString();\n        const queries = searchQuery.split(searchQueryNumber);\n        const query = queries[0] || queries[1];\n        searchQueryText = query ? query : \"\";\n      } else {\n        searchQueryText = searchQuery;\n      }\n    }\n    return { searchQueryText, searchQueryNumber };\n  }\n  render = () => {\n    const { title, component, searchFunc, deleteFunc, data } = this.props;\n    const contacts = this.checkForDoubleID(this.getContacts());\n    return (\n      <SectionStyle>\n        <TitleH1>{title}</TitleH1>\n        {component === \"Form\" && <Form onSubmit={this.onSubmit} />}\n        {component === \"Contacts\" && (\n          <Contacts\n            contacts={contacts}\n            searchFunc={searchFunc}\n            deleteFunc={deleteFunc}\n            message={\n              data.length\n                ? \"Sorrry, no contacts found.\"\n                : \"Sorrry, you have no contacts yet.\"\n            }\n          />\n        )}\n      </SectionStyle>\n    );\n  };\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  component: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n  doAddContact: PropTypes.func,\n  searchFunc: PropTypes.func,\n  deleteFunc: PropTypes.func,\n};\n","import { Component, Fragment } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Section } from \"./components/Section/Section\";\n\nimport { Notify } from \"notiflix\";\nNotify.init({ position: \"center-top\" });\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  doAddContact = (name, number) => {\n    Notify.success(\"Well Done! Added \" + name);\n    this.setState(({ contacts, filter }) => {\n      const newArr = [...contacts, { id: uuidv4(), name, number }];\n      return { contacts: newArr, filter };\n    });\n  };\n\n  makeSearch = (e) => {\n    const searchQuery = e.target.value.toLocaleLowerCase();\n    this.setState({ filter: searchQuery });\n  };\n\n  doDeleteContact = (id) => {\n    const { contacts, filter } = this.state;\n    const newArr = [];\n    let reportName;\n    if (!id) return;\n\n    contacts.forEach((contact) => {\n      if (contact.id !== id) {\n        newArr.push(contact);\n      } else {\n        reportName = contact.name;\n      }\n    });\n\n    if (newArr.length === contacts.length) {\n      Notify.failure(\"Oh, no!\");\n      return;\n    }\n\n    this.setState(() => {\n      return { contacts: newArr, filter };\n    });\n\n    Notify.info(`Contact ${reportName} was removed successfully`);\n  };\n  componentDidMount() {\n    const storage = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (storage) {\n      this.setState({ contacts: storage });\n    } else {\n      this.setState({ contscts: [], filter: \"\" });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <Section\n          title=\"Phonebook\"\n          component=\"Form\"\n          data={this.state}\n          doAddContact={this.doAddContact}\n        />\n        <hr />\n        <Section\n          title=\"Contacts\"\n          component=\"Contacts\"\n          data={this.state}\n          searchFunc={this.makeSearch}\n          deleteFunc={this.doDeleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}